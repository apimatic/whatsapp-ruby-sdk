# whats_app_cloud_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module WhatsAppCloudApi
  # Header Model.
  class Header < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The header type you would like to use.
    # @return [HeaderTypeEnum]
    attr_accessor :type

    # Required if type is set to text. Text for the header. Formatting allows
    # emojis, but not markdown.
    # @return [String]
    attr_accessor :text

    # Required if type is set to video. Contains the media object for this
    # video.
    # @return [Video]
    attr_accessor :video

    # Required if type is set to image. Contains the media object for this
    # image.
    # @return [Image]
    attr_accessor :image

    # Required if type is set to document. Contains the media object for this
    # document.
    # @return [Document]
    attr_accessor :document

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'type'
      @_hash['text'] = 'text'
      @_hash['video'] = 'video'
      @_hash['image'] = 'image'
      @_hash['document'] = 'document'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        text
        video
        image
        document
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(type = nil,
                   text = nil,
                   video = nil,
                   image = nil,
                   document = nil)
      @type = type unless type == SKIP
      @text = text unless text == SKIP
      @video = video unless video == SKIP
      @image = image unless image == SKIP
      @document = document unless document == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('type') ? hash['type'] : SKIP
      text = hash.key?('text') ? hash['text'] : SKIP
      video = Video.from_hash(hash['video']) if hash['video']
      image = Image.from_hash(hash['image']) if hash['image']
      document = Document.from_hash(hash['document']) if hash['document']

      # Create object from extracted values.
      Header.new(type,
                 text,
                 video,
                 image,
                 document)
    end
  end
end
