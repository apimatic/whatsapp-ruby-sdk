# whats_app_cloud_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module WhatsAppCloudApi
  # Contact Model.
  class Contact < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Full contact address(es)
    # @return [List of Address]
    attr_accessor :addresses

    # Full contact address(es)
    # @return [String]
    attr_accessor :birthday

    # Contact email address(es)
    # @return [List of EmailObject]
    attr_accessor :emails

    # Full contact name
    # @return [Name]
    attr_accessor :name

    # Contact organization information
    # @return [Org]
    attr_accessor :org

    # Contact phone number(s)
    # @return [List of PhoneObject]
    attr_accessor :phones

    # Contact URL(s)
    # @return [List of UrlObject]
    attr_accessor :urls

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['addresses'] = 'addresses'
      @_hash['birthday'] = 'birthday'
      @_hash['emails'] = 'emails'
      @_hash['name'] = 'name'
      @_hash['org'] = 'org'
      @_hash['phones'] = 'phones'
      @_hash['urls'] = 'urls'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        addresses
        birthday
        emails
        org
        phones
        urls
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(name = nil,
                   addresses = nil,
                   birthday = 'YYYY-MM-DD formatted string.',
                   emails = nil,
                   org = nil,
                   phones = nil,
                   urls = nil)
      @addresses = addresses unless addresses == SKIP
      @birthday = birthday unless birthday == SKIP
      @emails = emails unless emails == SKIP
      @name = name unless name == SKIP
      @org = org unless org == SKIP
      @phones = phones unless phones == SKIP
      @urls = urls unless urls == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = Name.from_hash(hash['name']) if hash['name']
      # Parameter is an array, so we need to iterate through it
      addresses = nil
      unless hash['addresses'].nil?
        addresses = []
        hash['addresses'].each do |structure|
          addresses << (Address.from_hash(structure) if structure)
        end
      end

      addresses = SKIP unless hash.key?('addresses')
      birthday = hash['birthday'] ||= 'YYYY-MM-DD formatted string.'
      # Parameter is an array, so we need to iterate through it
      emails = nil
      unless hash['emails'].nil?
        emails = []
        hash['emails'].each do |structure|
          emails << (EmailObject.from_hash(structure) if structure)
        end
      end

      emails = SKIP unless hash.key?('emails')
      org = Org.from_hash(hash['org']) if hash['org']
      # Parameter is an array, so we need to iterate through it
      phones = nil
      unless hash['phones'].nil?
        phones = []
        hash['phones'].each do |structure|
          phones << (PhoneObject.from_hash(structure) if structure)
        end
      end

      phones = SKIP unless hash.key?('phones')
      # Parameter is an array, so we need to iterate through it
      urls = nil
      unless hash['urls'].nil?
        urls = []
        hash['urls'].each do |structure|
          urls << (UrlObject.from_hash(structure) if structure)
        end
      end

      urls = SKIP unless hash.key?('urls')

      # Create object from extracted values.
      Contact.new(name,
                  addresses,
                  birthday,
                  emails,
                  org,
                  phones,
                  urls)
    end
  end
end
