# whats_app_cloud_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module WhatsAppCloudApi
  # Parameter Model.
  class Parameter < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Describes the parameter type. For text-based templates, the only supported
    # parameter types are text, currency, date_time.
    # @return [ParameterTypeEnum]
    attr_accessor :type

    # Required when type=text. The messageâ€™s text. For the header component, the
    # character limit is 60 characters. For the body component, the character
    # limit is 1024 characters.
    # @return [String]
    attr_accessor :text

    # Required when type=currency.
    # @return [Currency]
    attr_accessor :currency

    # Required when type=date_time.
    # @return [DateTimeObject]
    attr_accessor :date_time

    # Required when type=image.
    # @return [Image]
    attr_accessor :image

    # Required when type=document. Only PDF documents are supported for
    # media-based message templates.
    # @return [Document]
    attr_accessor :document

    # Required when type=video.
    # @return [Video]
    attr_accessor :video

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'type'
      @_hash['text'] = 'text'
      @_hash['currency'] = 'currency'
      @_hash['date_time'] = 'date_time'
      @_hash['image'] = 'image'
      @_hash['document'] = 'document'
      @_hash['video'] = 'video'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        text
        currency
        date_time
        image
        document
        video
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(type = nil,
                   text = nil,
                   currency = nil,
                   date_time = nil,
                   image = nil,
                   document = nil,
                   video = nil)
      @type = type unless type == SKIP
      @text = text unless text == SKIP
      @currency = currency unless currency == SKIP
      @date_time = date_time unless date_time == SKIP
      @image = image unless image == SKIP
      @document = document unless document == SKIP
      @video = video unless video == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('type') ? hash['type'] : SKIP
      text = hash.key?('text') ? hash['text'] : SKIP
      currency = Currency.from_hash(hash['currency']) if hash['currency']
      date_time = DateTimeObject.from_hash(hash['date_time']) if hash['date_time']
      image = Image.from_hash(hash['image']) if hash['image']
      document = Document.from_hash(hash['document']) if hash['document']
      video = Video.from_hash(hash['video']) if hash['video']

      # Create object from extracted values.
      Parameter.new(type,
                    text,
                    currency,
                    date_time,
                    image,
                    document,
                    video)
    end
  end
end
