# whats_app_cloud_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module WhatsAppCloudApi
  # Component Model.
  class Component < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Describes the component type. For text-based templates, we only support
    # the type=body.
    # @return [ComponentTypeEnum]
    attr_accessor :type

    # Required when type=button. Not used for the other types. Type of button to
    # create.
    # @return [SubTypeEnum]
    attr_accessor :sub_type

    # Required when type=button. Array of parameter objects with the content of
    # the message. For components of type=button, see the button parameter
    # object.
    # @return [List of Object]
    attr_accessor :parameters

    # Required when type=button. Not used for the other types. Position index of
    # the button. You can have up to 3 buttons using index values of 0 to 2.
    # @return [String]
    attr_accessor :index

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'type'
      @_hash['sub_type'] = 'sub_type'
      @_hash['parameters'] = 'parameters'
      @_hash['index'] = 'index'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        sub_type
        index
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(type = nil,
                   parameters = nil,
                   sub_type = nil,
                   index = nil)
      @type = type unless type == SKIP
      @sub_type = sub_type unless sub_type == SKIP
      @parameters = parameters unless parameters == SKIP
      @index = index unless index == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('type') ? hash['type'] : SKIP
      parameters = hash.key?('parameters') ? hash['parameters'] : SKIP
      sub_type = hash.key?('sub_type') ? hash['sub_type'] : SKIP
      index = hash.key?('index') ? hash['index'] : SKIP

      # Create object from extracted values.
      Component.new(type,
                    parameters,
                    sub_type,
                    index)
    end
  end
end
